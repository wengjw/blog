[{"categories":["学习笔记"],"content":"第一部分 开篇\r","date":"2024-09-03","objectID":"/posts/2024/09/03/:1:0","tags":["HTML"],"title":"HTML5权威指南-学习笔记","uri":"/posts/2024/09/03/"},{"categories":["学习笔记"],"content":"第1章 HTML5背景知识\rHTML5不仅仅是HTML规范的最新版本，它还是一系列用来制作现代富web内容的相关技术。其中最重要的三项技术是：HTML5核心规范、CSS（Cascading Style Sheets，层叠样式表） HTML5 引入原生多媒体支持：浏览器可以直接播放视频和音频。 引入可编程内容：HTML5最大的变化之一就是添加了canvas元素（一个通用的绘图平面），开发人员可用它完成从前使用Flash才能完成的任务。编程成了HTML文档中第一层次的事情，这是一个重大转变。 引入语义Web：HTML5引入了一些用来分开元素的含义和呈现方式的特性和规则。开发者先标记内容，再定义其呈现方式。 可以使用Can I Use？网站查阅浏览器对HTML5特性的支持情况。也可以使用Modernizr网站提供的JavaScript库，以编程方式，动态检测浏览器的支持情况。 最权威的HTML5参考资料网站W3C，更具亲和力的(面向开发者的 Web 技术 | MDN (mozilla.org) ","date":"2024-09-03","objectID":"/posts/2024/09/03/:1:1","tags":["HTML"],"title":"HTML5权威指南-学习笔记","uri":"/posts/2024/09/03/"},{"categories":["学习笔记"],"content":"第2章 准备工作\r挑选浏览器：Google Chrome、Mozilla FireFox、Opera、Apple Safari、Microsoft Internet Explorer（wengjw注解：2012前后的那段时间，我最爱用的浏览器是Google的Chrome，但是由于它同步个人设置需要翻墙，所以我后来改用微软的新版浏览器Edge，新版Edge使用了与Chrome一样的内核，所以它甚至能够直接安装使用Chrome的插件，当然，随着多年来的发展，绝大多数Chrome插件都上架到Edge商店了，这样安装插件就更方便了） 挑选HTML编辑器：作者使用的是ActiveState的Komodo Edit，这是一款免费开源的编辑器，它对HTML的支持有其独到之处。 挑选Web服务器：任意Web服务器都行。之所以要使用Web服务器，因为如果HTML文档是从本机的磁盘上加载的话，有些特性表现会有所不同。 获取Node.js：本书中会写一些服务端脚本，作者不打算引入新的语言，所以采用Node.js。它让JavaScript可以在服务器端运行，从而脱离浏览器环境。 ","date":"2024-09-03","objectID":"/posts/2024/09/03/:1:2","tags":["HTML"],"title":"HTML5权威指南-学习笔记","uri":"/posts/2024/09/03/"},{"categories":["学习笔记"],"content":"第3章 初探HTML\r使用元素\r元素名不区分大小写。 元素一般有三个部分：开始标签，结束标签，夹在两个标签中的元素内容。例如：\u003ccode\u003econtent\u003c/code\u003e 某些HTML元素会对呈现形式产生影响，但这些元素通常来自HTML的早期版本。用HTML元素来控制内容的呈现方式如今受到强烈的反对。现在的观点是应该用HTML元素来说明文档内容的结构和含义，用CSS控制内容的呈现方式。这类元素在浏览器中有默认的呈现样式，不过可以通过CSS改变其默认样式。 空元素：元素的开始标签和结束标签之间可以没有内容，没有内容的元素称为空元素。 自闭合标签：空元素可以简洁地用一个标签表示。例如：\u003ccode/\u003e 虚元素：有些元素只能使用一个标签表示，在其中放置任何内容都不符合HTML规范。例如：hr元素 (它也是个具有呈现形式含义的元素，表示一条横线) 可以用单个开始标签表示虚元素：\u003chr\u003e 也可以用空元素结构表示虚元素：\u003chr/\u003e （作者更喜欢这种形式，我也更喜欢这种形式，记得上大学那会，学了一阵子的HTML4.0，也是XHTML1.0，特别强调应该用这种方式表示单个标签） 使用元素属性（attribute）\r属性只能用在开始标签或单个标签上，不能用于结束标签。 属性具有两个部分：名称和值。 全局属性和专有属性：全局属性可用于所有HTML元素，专有属性（局部属性）则是元素特有的属性。例如href属性就是a元素的专有属性。例如：I like \u003ca href=\"apples.html\"\u003eapples\u003c/a\u003e and oranges 一个元素可应用多个属性，这些属性使用一个或多个空格分隔。I like \u003ca class=\"link\" href=\"apples.html\" id=\"firstlink\"\u003eapples\u003c/a\u003e and oranges 布尔属性：这类属性不需要设定值，只要将属性名称添加到元素的标签中即可。例如：Enter your name：\u003cinput disabled\u003e，也可以将它的属性值设置为空字符串或者属性名称字符串来达到同样的效果。例如：Enter your name：\u003cinput disabled=\"\"\u003e或者Enter your name：\u003cinput disabled=\"disabled\"\u003e 自定义属性：用户可以自定义属性（也叫：作者定义属性、扩展属性），这种属性名称必须添加data-前缀（添加前缀是为了避免与HTML的未来版本中可能增加的属性名冲突）。例如：Enter your name：\u003cinput disabled data-creator=\"admin\" data-purpose=\"collection\"\u003e 创建HTML文档\r浏览器和用户代理、HTML和XHTML的对比（参见原书） HTML文档的外层结构由两个元素确定：DOCTYPE和html。 \u003c!DOCTYPE HTML\u003e \u003chtml\u003e \u003c!-- elements go here --\u003e \u003c/html\u003e DOCTYPE元素中的HTML是一个布尔属性。 HTML的注释以标签\u003c!--开头，以标签--\u003e结尾。浏览器会忽略这两个标签之间的一切内容。 元数据：HTML文档的元数据可以向浏览器提供文档的一些信息。元数据包含在head元素内部。 \u003c!DOCTYPE HTML\u003e \u003chtml\u003e \u003chead\u003e \u003c!-- metadata goes here --\u003e \u003ctitle\u003eExample\u003c/title\u003e \u003c/head\u003e \u003c/html\u003e 内容：HTML文档的第三部分就是文档内容，它放在body元素之中。 \u003c!DOCTYPE HTML\u003e \u003chtml\u003e \u003chead\u003e \u003c!-- metadata goes here --\u003e \u003ctitle\u003eExample\u003c/title\u003e \u003c/head\u003e \u003cbody\u003e \u003c!-- content and elements go here --\u003e I like \u003ccode\u003eapples\u003c/code\u003e and oranges. \u003c/body\u003e \u003c/html\u003e 父元素、子元素、后代元素和兄弟元素 父元素可以有多个子元素、子元素只能有一个父元素。 子元素还可以拥有自己的子元素。子元素和它的子元素、它的子元素的子元素、都被称为后代元素。子元素是关系最近的后代元素。 具有同一个父元素的子元素互为兄弟元素。 一个元素能以什么样的元素为父元素或者子元素是有限制的，这些限制通过元素类型表现出来。 元素之间关系的重要性在HTML中随处可见。 CSS圈定应用样式的元素的方法之一就要借助元素的父子关系。 文档对象模型（DOM）也会涉及通过搜索文档树来查找文档中的某个元素，而文档树正是元素之间关系的一种表述。 元素类型 三大类型： 元数据元素(metadata element)：用来构建HTML文档的基本结构，以及就如何处理文档向浏览器提供信息和指示。 短语元素(phrasing element)：短语元素是HTML的基本成分。 流元素(flow element)：它用来确定元素合法的父元素和子元素范围。流元素是短语元素的超集，所有短语元素都是流元素，但不是所有流元素都是短语元素。 还有一些元素无法归入上述三种类型：例如li元素。它表示列表项，只能有三种父元素：ol（有序列表）、ul（无序列表）、menu（菜单） 使用HTML实体\r实体就是浏览器用来替代特殊字符的一种代码。 HTML文档中有些字符具有特殊含义——最明显的就是\u003c和\u003e。有时候需要在文档中使用这些字符，但不想让它们作为HTML处理。这时就应该使用HTML实体(entity)。 实体名称和实体编号：每个实体都有一个名称和编号。例如\u003c字符，它的实体名称是\u0026lt; ，实体编号是\u0026#60;。 HTML5全局属性\r元素特有的属性为局部属性，所有元素通用的属性为全局属性。 accesskey属性：可以设定一个或者几个用来选择页面元素的快捷键。触发accesskey机制的按键组合因平台而已，Windows系统是按下Alt键和accesskey属性值对应的键。 \u003cinput type=\"password\" name=\"password\" accesskey=\"p\"/\u003e \u003cinput type=\"submit\" value=\"Log In\" accesskey=\"s\"/\u003e class属性：用来将元素归类。这样做通常是为了能够找出文档中的某一类元素或者为某一类元素应用CSS样式。 一个元素可以被归入多个类别，只要在class属性值中提供多个用空格分隔的类名即可。 \u003ca class=\"class1 class2\" href=\"http://apress.com\"\u003eApress web site\u003c/a\u003e \u003ca class=\"class2 otherclass\" href=\"http://w3c.org\"\u003eW3C web site\u003c/a\u003e contenteditable属性：属性值设置为true时，用户可以编辑元素内容；设置为false，则不能编辑。如果为设定其值，那么元素从父元素继承该属性的值。 contextmenu属性：用来为元素设定快捷菜单。（截止2024-09-05，尚无支持这个属性的浏览器） dir属性：用来规定元素中的文字的方向。有效值为ltr（从左到右）和rtl（从右到左）。 draggable属性：这个属性是HTML5支持拖放操作的方式之一。 dropzone属性：这个属性是HTML5支持拖放操作的方式之一。与上述的draggable搭配使用。 hidden属性：这是个布尔属性，表示相关元素当前无需关注。浏览器对它的处理方式是隐藏相关元素。 id属性：用来给元素分配一个唯一的标识符。通常用来将CSS样式应用到元素上或者在JavaScript中选择元素。 id属性值还可以用来导航到文档中的特定位置。倘若有个名为example.html的文档中包含一个id属性值为myelement的元素，那么使用example.html#myelement这个URL即可直接导航至该元素。 lang属性：说明元素内容使用的语言。该属性值必须使用有效的ISO语言代码（可以参考这个网址：Information on BCP 47 » RFC Editor (rfc-editor.org)）。使用该元素的目的是让浏览器调整其表达元素内容的方式。比如说，改变使用的引号，在使用了文字朗读器的情况下正确地发音。lang属性还可以用来选择指定语言的内容，以便只显示用户所选语言的内容或对应样式。 spellcheck属性：用来表明浏览器是否应该对元素的内容进行拼写检查。该属性只有用在用户可编辑的元素上才有意义。 style属性：用来直接在元素上定义CSS样式。 \u003ca href=\"http://apress.com\" style=\"background: grey; color:white; padding:10px\"\u003e Visit the Apress site \u003c/a\u003e tabindex属性：HTML页面上的焦点可以通过按Tab键在各元素之间切换，用tabindex属性可以改变默认的切换顺序。 \u003cform\u003e \u003clabel\u003eName: \u003cinput type=\"text\" name=\"name\" tabindex=\"1\"/\u003e\u003c/label\u003e \u003clabel\u003eCity: \u003cinput type=\"text\" name=\"city\" tabindex=\"-1\"/\u003e\u003c/label\u003e \u003clabel\u003eCountry: \u003cinput type=\"text\" name=\"country\" tabindex","date":"2024-09-03","objectID":"/posts/2024/09/03/:1:3","tags":["HTML"],"title":"HTML5权威指南-学习笔记","uri":"/posts/2024/09/03/"},{"categories":["学习笔记"],"content":"第4章 初探CSS\r定义和应用样式\rCSS样式由一条或多条以分号隔开的样式声明组成。每条声明包含一个CSS属性和该属性的值，二者以冒号分隔。 background-color:grey; color:white 使用元素内嵌样式：使用全局属性style来指定CSS样式。 \u003ca href=\"http://apress.com\" style=\"background-color:grey; color:white\"\u003eVisit the Apress website\u003c/a\u003e 使用文档内嵌样式：使用style元素定义文档内嵌样式，通过CSS选择器指示浏览器应用样式。 \u003c!DOCTYPE HTML\u003e \u003chtml\u003e \u003chead\u003e \u003ctitle\u003eExample\u003c/title\u003e \u003cstyle type=\"text/css\"\u003e a { background-color:grey; color:white } span { border: thin black solid; padding: 10px; } \u003c/style\u003e \u003c/head\u003e \u003cbody\u003e \u003ca href=\"http://apress.com\"\u003eVisit the Apress website\u003c/a\u003e \u003cp\u003eI like \u003cspan\u003eapples\u003c/span\u003e and oranges.\u003c/p\u003e \u003ca href=\"http://w3c.org\"\u003eVisit the W3C website\u003c/a\u003e \u003c/body\u003e \u003c/html\u003e 使用外部样式表：将样式定义在外部文件中（通常以.css为文件扩展名），使用link元素将它导入HTML文档。可以导入许许多多不同的样式表。如果不同的样式表中使用了相同的选择器，那么这些样式表的导入顺序就很重要。这种情况下应用的是后导入的样式。 \u003c!DOCTYPE HTML\u003e \u003chtml\u003e \u003chead\u003e \u003ctitle\u003eExample\u003c/title\u003e \u003clink rel=\"stylesheet\" type=\"text/css\" href=\"styles.css\"\u003e\u003c/link\u003e \u003c/head\u003e \u003cbody\u003e \u003ca href=\"http://apress.com\"\u003eVisit the Apress website\u003c/a\u003e \u003cp\u003eI like \u003cspan\u003eapples\u003c/span\u003e and oranges.\u003c/p\u003e \u003ca href=\"http://w3c.org\"\u003eVisit the W3C website\u003c/a\u003e \u003c/body\u003e \u003c/html\u003e 在CSS文件中，可以使用@import语句导入另一个样式表。@import语句必须位于CSS文件的顶端，CSS文件中的样式定义不能出现在@import语句之前。@import语句应用并不广泛。其中一个原因是很多人不知道有这个东西，另一个原因就是浏览器处理@import语句的效率不如处理多个link元素并层叠样式。 @import \"styles.css\"; span { border: medium black dashed; padding: 10px; } 样式的层叠和继承\r除了元素内嵌、文档内嵌和外部样式表，样式还有另外两个来源： 浏览器样式：更恰当的名称是用户代理样式。是元素尚未设置样式时浏览器应用在它身上的默认样式。多数元素都有默认的浏览器样式，尽管不是所有元素。 用户样式：大多数浏览器都允许用户定义自己的样式表。这类样式表中包含的样式称为用户样式。各种浏览器都有自己管理用户样式表的方式。 样式如何层叠：浏览器按顺序查看所有样式来源，索取CSS属性值并应用它。（下列的前三种样式统称为：作者样式） 元素内嵌样式（用元素的全局属性style定义）； 文档内嵌样式（用style元素定义）； 外部样式（用link元素导入外部CSS）； 用户样式（用户自定义的样式，由浏览器管理文件）； 浏览器样式（浏览器应用的默认样式）； 用重要样式调整层叠次序 在样式声明后附上!important即可将样式属性值标记为重要，从而改变正常的层叠次序。不管这种样式属性定义在什么地方，浏览器都会给予优先考虑。下面的例子中，文档内嵌样式的color属性值盖过了元素内嵌样式中的值。 \u003c!DOCTYPE HTML\u003e \u003chtml\u003e \u003chead\u003e \u003ctitle\u003eExample\u003c/title\u003e \u003cstyle type=\"text/css\"\u003e a { color: black !important; } \u003c/style\u003e \u003c/head\u003e \u003cbody\u003e \u003ca style=\"color:red\" href=\"http://apress.com\"\u003eVisit the Apress website\u003c/a\u003e \u003cp\u003eI like \u003cspan\u003eapples\u003c/span\u003e and oranges.\u003c/p\u003e \u003ca href=\"http://w3c.org\"\u003eVisit the W3C website\u003c/a\u003e \u003c/body\u003e \u003c/html\u003e 对于普通属性，作者样式中的值优先于用户样式中的值，而对于重要属性而言，情况正好相反。 根据具体程度和定义次序解决同级样式冲突 如果有两条定义于同一层次的样式都能应用于同一个元素，而且它们都包含着浏览器要查看的CSS属性值，这时浏览器就会评估两条样式的具体程度，然后选择较为特殊的那一条。 样式的具体程度通过统计三类特征得出： 样式选择器中的id值的数目； 样式选择器中其他属性和伪类的数目； 样式选择器中元素名和伪元素的数目； 评估结果根据上述顺序，按照a-b-c的形式生成一个数字（我称之为特征值）。先比较a值，大者优先；如果a值相同，则比较b值，大者优先；如果b值也相同，则比较c值，大者优先。例如：1-0-0比0-5-5的优先级更高。 如果上述的特征值相同，则根据定义样式的位置的先后次序来选择，规则是后来者居上。 注意：冲突是指两个或者多个样式中包含了相同的样式属性，如果不同的样式之间包含的属性不同，则不会冲突，这些样式属性都会应用到元素上。 继承 并非所有CSS属性均可继承：通常与元素外观（文字颜色，字体等）相关的样式会被继承；与元素在页面上的布局相关的样式不会被继承。 在样式中使用inherit这个特别设立的值可以强行实施继承，明确指示浏览器在该属性上使用父元素样式中的值。下面的例子定义了span元素的样式，其border属性值继承自父元素。 \u003c!DOCTYPE HTML\u003e \u003chtml\u003e \u003chead\u003e \u003ctitle\u003eExample\u003c/title\u003e \u003cstyle type=\"text/css\"\u003e p { color:white; background:grey; border: medium solid black; } span { border: inherit; } \u003c/style\u003e \u003c/head\u003e \u003cbody\u003e \u003ca href=\"http://apress.com\"\u003eVisit the Apress website\u003c/a\u003e \u003cp\u003eI like \u003cspan\u003eapples\u003c/span\u003e and oranges.\u003c/p\u003e \u003ca class=\"myclass1 myclass2\" href=\"http://w3c.org\"\u003eVisit the W3C website\u003c/a\u003e \u003c/body\u003e \u003c/html\u003e CSS中的颜色\r使用颜色名称表示颜色：red、green、blue、black、white，完整的颜色名称查询：CSS Color Module Level 3 (w3.org) 使用十六进制表示：#ff00ff、#FF08CC 使用十进制表示：0,0,0、192,192,192、255,0,255 CSS颜色函数： 函数 说明 示例 rgb(r, g, b) 用RGB模型表示颜色；r、g、b分量取值范围是0~255。 color: rgb(112, 128, 144) rgba(r, g, b, a) 用RGB模型表示颜色；外加一个表示透明度的a值（取值范围是0~1；0代表全透明，1代表完全不透明）。 color: rgba(112, 128, 144, 0.5) hsl(h,s,l) 用HSL模型（色相[hue]、饱和度[saturation]、明亮度[lightness]）表示颜色。 color: hsl(120, 100%, 22%) hsla(h,s,l,a) 与HSL模式类似，增加一个表示透明度的a值。 color: hsla(120, 100%, 22%, 0.4) CSS中的长度\r绝对长度：CSS支持五种绝对长度的单位。设置长度值时，应将数字和单位标识符连在一起，二者之间不能加空格或其他字符。 单位标识符 说明 in 英寸 cm 厘米 mm 毫米 pt 磅（1磅等于1/72英寸） pc pica（1pica等于12磅） 相对长度：相对长度的规定和实现都比绝对长度更复杂，需要严密、精确的语言明确定义，可惜CSS规范的语言没那么精密（这个问题已经困扰CSS多年）。相对单位的测量需要依托其他类型的单位。尽管CSS规定了许多既有趣又有用的单位，但其中一些单位还没有得到浏览器广泛、一致的支持。以下表格列出了主流浏览器支持的一些CSS相对单位。 单位标识符 说明 em 与元素字号挂钩 ex 与元素字体的“x高度”挂钩 rem 与根元素的字号挂钩 px CSS像素（假定显示设备的分辨率为96dpi） % 另一属性的值的百分比 未获广泛支持的单位：gd、vw、vh、vmin、vmax、ch（我的注释：vw、vh、vmin、vmax目前已经被主流浏览器支持） 单位","date":"2024-09-03","objectID":"/posts/2024/09/03/:1:4","tags":["HTML"],"title":"HTML5权威指南-学习笔记","uri":"/posts/2024/09/03/"},{"categories":["学习笔记"],"content":"第5章 初探JavaScript\r​ 我的注释：作者的这本书是2011年出版的，那时ECMAScript 6（简称ES6）还未发布（ES6于2015年6月正式发布）。因此这本书里关于JavaScript的一些内容可能已经过时。因此本章从略，改为阅读《JavaScript权威指南》第7版——原版书名为《JavaScript: The Definitive Guide》Seven Edition。 ","date":"2024-09-03","objectID":"/posts/2024/09/03/:1:5","tags":["HTML"],"title":"HTML5权威指南-学习笔记","uri":"/posts/2024/09/03/"},{"categories":["学习笔记"],"content":"第二部分 HTML元素\r","date":"2024-09-03","objectID":"/posts/2024/09/03/:2:0","tags":["HTML"],"title":"HTML5权威指南-学习笔记","uri":"/posts/2024/09/03/"},{"categories":["学习笔记"],"content":"第6章 HTML5元素背景知识\r语义与呈现分离\rHTML5中的一大主要变化是基本信念方面的：将元素的语义与元素对其内容呈现结果的影响分开。HTML元素负责文档内容的结构和含义，内容的呈现则由应用于元素上的CSS样式控制。 HTML5中新增的大多数元素都有具体的含义。例如：article、figure HTML4中的许多元素产生在“呈现与含义分离的观念”形成之前，这类元素包含对呈现的控制，比如b元素告诉浏览器用粗体显示文字。 由于旧元素的使用及其广泛，让HTML5彻底抛弃那些HTML4的元素是不切实际的。为了加速HTML5的推广，不得不对这些就元素做出妥协。 后续面对各种元素，面对“新思路”和“老路子”之间的敏感关系，心里要有数。 作者建议：尽量避免使用那些具有浓重的呈现意味或者纯粹起呈现作用的元素。 元素选用原则\r少亦可为多：不要滥用标记，而是在需要的时候使用。 别无用元素：每个元素针对的是一种特定类型的内容，对内容进行标记时，应该将元素用于它原定的用途，不要创造自有的语义。如果找不到适合自己所需的元素，可以考虑使用通用元素（如：span或div），并且用全局属性class表明其含义。CSS样式不是class属性的唯一用途。 具体为佳，一以贯之：用来标记内容的元素应选择最为具体的那个。如果已有元素能够恰当表达内容类型，就不要使用通用元素。HTML4中存在一种依赖div元素的倾向，这种倾向的缺陷在于它的语音并非显而易见。同一个元素在整个页面，网站或者web应用中的使用应保持一致。 不要对用户想当然：有人可能觉得HTML文档的用户关心的只是它在浏览器中的呈现结果，所以不用为标记的语义准确性劳神。呈现和语义分离原则就是为了让HTML文档更易于程序化处理，如果不关心标记的准确性和一致性，HTML文档处理起来就更为困难，用户能为其找到的其他用处也将有限。 元素速览：\r文档和元数据元素：创建HTML文档的上层建筑，向浏览器说明文档的情况，定义脚本程序和CSS样式，提供浏览器禁用脚本时要显示的内容。 元素 说明 类型 有无新增或变化 base 设置相对URL的基础 元数据 无变化 body 表示HTML文档的内容 无 有变化 DOCTYPE 表示HTML文档的开始 无 有变化 head 包含文档的元数据 无 无变化 html 表示文档中HTML部分的开始 无 有变化 link 定义与外部资源(通常是样式表或网站图标)的关系 元数据 有变化 meta 提供关于文档的信息 元数据 有变化 noscript 包含浏览器禁用脚本或不支持脚本时显示的内容 元数据、短语 无变化 script 定义脚本程序，可以是文档内嵌的也可以是外部文件中的 元数据、短语 有变化 style 定义CSS样式 元数据 有变化 title 设置文档标题 元数据 无变化 文本元素：用来为内容提供基本的结构和含义。 元素 说明 类型 有无新增或变化 a 生成超链接 短语、流 有变化 abbr 缩略语 短语 无变化 b 不带强调或着重意味地标记一段文字 短语 有变化 br 表示换行 短语 无变化 cite 表示其他作品的标题 短语 有变化 code 表示计算机代码片段 短语 无变化 del 表示从文档中删除的文字 短语、流 新增 dfn 表示术语定义 短语 无变化 em 表示着重强调的一段文字 短语 无变化 i 表示与周边内容秉性不同的一段文字，例如来自另一种语言的词语 短语 有变化 ins 表示加人文档的文字 短语、流 无变化 kbd 表示用户输人内容 短语 无变化 mark 表示一段因为与上下文中另一词语相关而被突出显示的内容 短语 新增 q 表示引自他处的内容 短语 无变化 rp 与ruby元素结合使用，标记括号 短语 新增 rt 与ruby元素结合使用，标记注音符号 短语 新增 ruby 表示位于表意文字上方或右方的注音符号 短语 新增 s 表示文字已不再准确 短语 有 samp 表示计算机程序的输出内容 短语 无 small 表示小号字体内容 短语 有 span 一个没有自己的语义的通用元素。可以用在希望应用一些全局属性却又不想引入额外语义的情况 短语 无 strong 表示重要内容 短语 无 sub 表示下标文字 短语 无 sup 表示上标文字 短语 无 time 表示时间或日期 短语 新增 u 不带强调或着重意味地标记一段文字 短语 有 var 表示程序或计算机系统中的变量 短语 无 wbr 表示可安全换行的地方 短语 新增 对内容分组：将相关的内容分组 元素 说明 类型 有无新增或变化 blockquote 表示引自他处的大段内容 流 无变化 dd 用在dl元素之中，表示定义 无 无变化 div 一个没有任何既定语义的通用元素，是span元素在流元素中的对应物 流 无变化 dl 表示包含一系列术语和定义的说明列表 流 无变化 dt 用在dl元素之中，表示术语 无 无变化 figcaption 表示figure元素的标题 无 新增 figure 表示图片 流 新增 hr 表示段落级别的主题转换 流 有变化 li 用在ul、ol和menu元素中，表示列表项 无 有变化 ol 表示有序列表 流 有变化 p 表示段落 流 有变化 pre 表示其格式应被保留的内容 流 无变化 ul 表示无序列表 流 有变化 划分内容：划分内容，让每个概念、观点或者主题彼此分隔开。它们中有许多是新增的元素。这些元素为分离元素的含义和外观做了大量基础性的工作。 元素 说明 类型 有无新增或变化 address 表示文档或article的联系信息 流 新增 article 表示一段独立的内容 流 新增 aside 表示与周边内容稍有牵涉的内容 流 新增 details 生成一个区域，用户将其展开可以获得更多细节知识 流 新增 footer 表示尾部 流 新增 h1-h6 表示标题 流 无变化 header 表示首部 流 新增 hgroup 将一组标题组织在一起，以便文档大纲只显示其中第一个标题 流 新增 nav 表示有意集中在一起的导航元素 流 新增 section 表示一个重要的概念或主题 流 新增 summary 用在details元素中，表示该元素内容的标题或说明 无 新增 制表：制作显示数据的表格。表格在HTML5中的主要变化是不能再用来控制页面布局，这项工作现在用CSS布局特性来完成。 元素 说明 类型 有无新增或变化 caption 表示表格标题 无 有变化 col 表示一列 无 有变化 colgroup 表示一组列 无 有变化 table 表示表格 流 有变化 tbody 表示表格主体 无 有变化 td 表示单元格 无 有变化 tfoot 表示表脚 无 有变化 th 表示标题行单元格 无 有变化 thead 表示标题行 无 有变化 tr 表示一行单元格 无 有变化 创建表单：用于创建HTML表单，以便获得用户的输入数据。HTML5中对这方面关注较多，并且新增了不少元素和特性（包括在用户提交表单时在客户端验证输入数据的功能）。特别值得关注的是input元素的新类型。 元素 说明 类型 有无新增或变化 ","date":"2024-09-03","objectID":"/posts/2024/09/03/:2:1","tags":["HTML"],"title":"HTML5权威指南-学习笔记","uri":"/posts/2024/09/03/"}]